/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Sinarelektronikapp.masterData.user.view;

import Sinarelektronikapp.masterData.user.controller.usercontroller;
import Sinarelektronikapp.masterData.user.database.userdatabase;
import Sinarelektronikapp.masterData.user.entity.User;
import Sinarelektronikapp.masterData.user.error.userException;
import Sinarelektronikapp.masterData.user.model.event.userListener;
import Sinarelektronikapp.masterData.user.model.tabelModelUser;
import Sinarelektronikapp.masterData.user.model.usermodel;
import Sinarelektronikapp.masterData.user.service.userDao;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Fauzi
 */
public class userView extends javax.swing.JPanel implements userListener, ListSelectionListener{

    /**
     * Creates new form userView
     */
    
    private usercontroller controller;
    
    private usermodel model;
    
    private tabelModelUser modelUser;
    
    //private User user;
    
    public userView() throws SQLException {
        

    /*ActionListener taskPerformer = new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent evt) {        
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(new KeyEventDispatcher() {
              @Override
              public boolean dispatchKeyEvent(KeyEvent e) {
                  if(e.getID() == KeyEvent.KEY_PRESSED){
                      if(e.getKeyCode() == KeyEvent.VK_F1){
                          tambah();
                      }else if(e.getKeyCode() == KeyEvent.VK_F2){
                          update();
                      }else if(e.getKeyCode() == KeyEvent.VK_F3){
                          delete();
                      }
                  }
                return false;
              }
          });
      }
    };
    // Timer
    new Timer(1000, taskPerformer).start();*/
        
        
        modelUser = new tabelModelUser();
        
        model=new usermodel();
        model.setListener(this);
        
        controller=new usercontroller(model);
        
        
        initComponents();
        
        tabelUser.getSelectionModel().addListSelectionListener(this);
        tabelUser.setModel(modelUser);
        
        try {
            loadDatabase();
            loadId();
        } catch (userException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }                                                           
        setLoadAwal();
    }

    private void setLoadAwal(){
        txtNamaUSer.requestFocus();
    }
    public JComboBox getCmbCari() {
        return cmbCari;
    }

    public JComboBox getCmbUrut() {
        return cmbUrut;
    }

    public JTextField getTxtCari() {
        return txtCari;
    }
    
    public JComboBox getCmbLevel() {
        return cmbLevel;
    }

    public void setCmbLevel(JComboBox cmbLevel) {
        this.cmbLevel = cmbLevel;
    }

    public JTable getTabelUser() {
        return tabelUser;
    }

    public void setTabelUser(JTable tabelUser) {
        this.tabelUser = tabelUser;
    }

    public JTextField getTxtIdUser() {
        return txtIdUser;
    }

    public void setTxtIdUser(JTextField txtIdUser) {
        this.txtIdUser = txtIdUser;
    }

    public JTextArea getTxtKet() {
        return txtKet;
    }

    public void setTxtKet(JTextArea txtKet) {
        this.txtKet = txtKet;
    }

    public JTextField getTxtNamaUSer() {
        return txtNamaUSer;
    }

    public void setTxtNamaUSer(JTextField txtNamaUSer) {
        this.txtNamaUSer = txtNamaUSer;
    }

    public JPasswordField getTxtPassword() {
        return txtPassword;
    }

    public void setTxtPassword(JPasswordField txtPassword) {
        this.txtPassword = txtPassword;
    }

    public void setCmbCari(JComboBox cmbCari) {
        this.cmbCari = cmbCari;
    }

    public void setCmbUrut(JComboBox cmbUrut) {
        this.cmbUrut = cmbUrut;
    }

    public void setTxtCari(JTextField txtCari) {
        this.txtCari = txtCari;
    }
         

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAtas = new javax.swing.JPanel();
        kiri = new javax.swing.JPanel();
        labelKiri = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputKiri = new javax.swing.JPanel();
        txtIdUser = new javax.swing.JTextField();
        txtNamaUSer = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        middle = new javax.swing.JPanel();
        labelKanan = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        inputKanan = new javax.swing.JPanel();
        cmbLevel = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtKet = new javax.swing.JTextArea();
        panelTengah = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        left = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        right = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btCari = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        cmbCari = new javax.swing.JComboBox();
        cmbUrut = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelUser = new javax.swing.JTable();
        panelBawah = new javax.swing.JPanel();
        btTambah = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btReset = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        panelAtas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelAtas.setPreferredSize(new java.awt.Dimension(668, 120));
        panelAtas.setLayout(new java.awt.BorderLayout());

        kiri.setLayout(new java.awt.GridLayout(1, 3));

        labelKiri.setLayout(new java.awt.GridLayout(3, 0));

        jLabel1.setText("Id User :");
        labelKiri.add(jLabel1);

        jLabel2.setText("Nama User :");
        labelKiri.add(jLabel2);

        jLabel3.setText("Password :");
        labelKiri.add(jLabel3);

        kiri.add(labelKiri);

        inputKiri.setLayout(new java.awt.GridLayout(3, 0));

        txtIdUser.setEditable(false);
        inputKiri.add(txtIdUser);

        txtNamaUSer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaUSerActionPerformed(evt);
            }
        });
        txtNamaUSer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNamaUSerFocusGained(evt);
            }
        });
        inputKiri.add(txtNamaUSer);

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        inputKiri.add(txtPassword);

        kiri.add(inputKiri);

        panelAtas.add(kiri, java.awt.BorderLayout.CENTER);

        middle.setLayout(new java.awt.GridLayout(1, 2));

        labelKanan.setLayout(new java.awt.GridLayout(2, 0));

        jLabel4.setText("Level :");
        labelKanan.add(jLabel4);

        jLabel5.setText("Keterangan :");
        labelKanan.add(jLabel5);

        middle.add(labelKanan);

        inputKanan.setLayout(new java.awt.GridLayout(2, 1));

        cmbLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pemilik Toko", "Administrator", "Karyawan" }));
        cmbLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLevelActionPerformed(evt);
            }
        });
        inputKanan.add(cmbLevel);

        txtKet.setColumns(20);
        txtKet.setRows(5);
        jScrollPane1.setViewportView(txtKet);

        inputKanan.add(jScrollPane1);

        middle.add(inputKanan);

        panelAtas.add(middle, java.awt.BorderLayout.EAST);

        add(panelAtas, java.awt.BorderLayout.PAGE_START);

        panelTengah.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelTengah.setPreferredSize(new java.awt.Dimension(456, 300));
        panelTengah.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        left.setLayout(new java.awt.GridLayout(3, 0));

        jLabel6.setText("Masukkan Kata Kunci :");
        left.add(jLabel6);

        jLabel7.setText("Cari Data Berdasarkan :");
        left.add(jLabel7);

        jLabel8.setText("Urut Data Berdasarkan :");
        left.add(jLabel8);

        jPanel1.add(left, java.awt.BorderLayout.WEST);

        right.setLayout(new java.awt.GridLayout(3, 0));

        btCari.setText("Cari");
        btCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCariActionPerformed(evt);
            }
        });

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(txtCari, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCari, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtCari, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(btCari, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        right.add(jPanel3);

        cmbCari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Id user", "Nama", "Level", "Keterangan" }));
        right.add(cmbCari);

        cmbUrut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Id user", "Nama", "Level", "Keterangan" }));
        cmbUrut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUrutActionPerformed(evt);
            }
        });
        right.add(cmbUrut);

        jPanel1.add(right, java.awt.BorderLayout.CENTER);

        panelTengah.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        tabelUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelUser);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        panelTengah.add(jPanel2, java.awt.BorderLayout.CENTER);

        add(panelTengah, java.awt.BorderLayout.CENTER);

        panelBawah.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelBawah.setLayout(new java.awt.GridLayout(1, 4));

        btTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sinarelektronikapp/imageResource/tambah.png"))); // NOI18N
        btTambah.setMnemonic('T');
        btTambah.setFocusable(false);
        btTambah.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btTambah.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTambahActionPerformed(evt);
            }
        });
        panelBawah.add(btTambah);

        btUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sinarelektronikapp/imageResource/update2.png"))); // NOI18N
        btUpdate.setMnemonic('U');
        btUpdate.setFocusable(false);
        btUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btUpdate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });
        panelBawah.add(btUpdate);

        btDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sinarelektronikapp/imageResource/hapus.png"))); // NOI18N
        btDelete.setMnemonic('H');
        btDelete.setFocusable(false);
        btDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });
        panelBawah.add(btDelete);

        btReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sinarelektronikapp/imageResource/reset.png"))); // NOI18N
        btReset.setMnemonic('R');
        btReset.setFocusable(false);
        btReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btReset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResetActionPerformed(evt);
            }
        });
        panelBawah.add(btReset);

        add(panelBawah, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void btCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCariActionPerformed
        try {
            try {
                // TODO add your handling code here:
                controller.searchUser(this, this);
            } catch (SQLException ex) {
                Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (userException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCariActionPerformed

    private void tambah(){
        try {
            // TODO add your handling code here:
            controller.insertUser(this);            
            controller.resetUser();
        } catch (SQLException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    private void btTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTambahActionPerformed
        tambah();
    }//GEN-LAST:event_btTambahActionPerformed

    private void update(){
        try {
            // TODO add your handling code here:
            controller.updateUser(this);
        } catch (SQLException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }
        controller.resetUser();        
    }
    
    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        update();
    }//GEN-LAST:event_btUpdateActionPerformed

    private void delete(){
        try {
            // TODO add your handling code here:
            controller.deleteUser(this);
        } catch (SQLException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            loadId();
        } catch (SQLException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (userException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }
        controller.resetUser();        
    }
    
    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        delete();
    }//GEN-LAST:event_btDeleteActionPerformed

    private void reset(){
        controller.resetUser();
    }
    
    private void btResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btResetActionPerformed

    private void cmbUrutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUrutActionPerformed
        try {
            // TODO add your handling code here:
            controller.sortUser(this);
        } catch (userException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbUrutActionPerformed

    private void txtNamaUSerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaUSerFocusGained
        try {
            // TODO add your handling code here:
            loadId();
        } catch (SQLException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (userException ex) {
            Logger.getLogger(userView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtNamaUSerFocusGained

    private void txtNamaUSerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaUSerActionPerformed
        // TODO add your handling code here:
        txtPassword.requestFocus();
    }//GEN-LAST:event_txtNamaUSerActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void cmbLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLevelActionPerformed
        // TODO add your handling code here:
        txtKet.requestFocus();
    }//GEN-LAST:event_cmbLevelActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
        btCari.doClick();
    }//GEN-LAST:event_txtCariActionPerformed

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCari;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btReset;
    private javax.swing.JButton btTambah;
    private javax.swing.JButton btUpdate;
    private javax.swing.JComboBox cmbCari;
    private javax.swing.JComboBox cmbLevel;
    private javax.swing.JComboBox cmbUrut;
    private javax.swing.JPanel inputKanan;
    private javax.swing.JPanel inputKiri;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel kiri;
    private javax.swing.JPanel labelKanan;
    private javax.swing.JPanel labelKiri;
    private javax.swing.JPanel left;
    private javax.swing.JPanel middle;
    private javax.swing.JPanel panelAtas;
    private javax.swing.JPanel panelBawah;
    private javax.swing.JPanel panelTengah;
    private javax.swing.JPanel right;
    private javax.swing.JTable tabelUser;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIdUser;
    private javax.swing.JTextArea txtKet;
    private javax.swing.JTextField txtNamaUSer;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onChange(usermodel model) {
        txtIdUser.setText(model.getIdUser());
        txtNamaUSer.setText(model.getNama());
        txtKet.setText(model.getKeterangan());
        txtPassword.setText(model.getPassword());
        //cmbLevel.setSelectedItem(model.getLevel());
    
    }

    @Override
    public void onInsert(User user) {
        modelUser.add(user);
    }

    @Override
    public void onUpdate(User user) {
        int index=tabelUser.getSelectedRow();
        modelUser.set(index, user);
    }

    @Override
    public void onDelete() {
        int index=tabelUser.getSelectedRow();
        modelUser.remove(index);
    }

    @Override
    public void onSearch(List list) {
        modelUser.setList(list);
    }

    @Override
    public void onSort(List list) {
        modelUser.setList(list);
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        try{
            User user=modelUser.get(tabelUser.getSelectedRow());
            txtIdUser.setText(user.getIduser());
            txtNamaUSer.setText(user.getNama());
            txtPassword.setText(user.getPassword());
            cmbLevel.setSelectedItem(user.getLevel());
            txtKet.setText(user.getKeterangan());
        }catch(IndexOutOfBoundsException exception){

        }
    }
    
    public void loadDatabase() throws userException, SQLException{
        userDao dao=userdatabase.getUserDao();
        modelUser.setList(dao.selectAllUser());
    }
    
    public void loadId() throws SQLException, userException{
        userDao dao=userdatabase.getUserDao();        
    }
}
